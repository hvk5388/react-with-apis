{"version":3,"sources":["components/Header.js","components/Footer.js","components/Flights.js","components/AirportInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","currencyName","currencies","length","Code","placeName","places","placeId","i","PlaceId","Name","Flights","console","log","flights","map","flight","MinPrice","OutboundLeg","DepartureDate","OriginId","DestinationId","QuoteId","AirportInfo","useState","setPlaces","setCurrencies","setFlights","query2","setQuery2","curQuery","setCurQuery","outQuery","setOutQuery","departQuery","setDepartQuery","destQuery","setDestQuery","showFlights","setShowFlights","onSubmit","e","a","reqFlights","method","headers","link","URLSearchParams","fetch","response2","json","Quotes","Places","Currencies","preventDefault","getMyAPI","htmlFor","id","value","onChange","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37c07f49.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { \r\n    return (\r\n        <div className=\"header\">\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) { \r\n    return (\r\n        <div className=\"footer\">\r\n            {props.title}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Flights.css';\r\n\r\nfunction Flights(props) {\r\n    console.log(\"props.flights\")\r\n    console.log(props.flights)\r\n    console.log(props)\r\n    return(\r\n        <div className=\"flights\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Minimum Price</th>\r\n                        <th>Date</th>\r\n                        <th>Departure City</th>\r\n                        <th>Incoming City</th>\r\n                        <th>Currency</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.flights.map(flight => {\r\n                        return (\r\n                            <tr key={flight.QuoteId}>\r\n                                <td>{flight.MinPrice}</td>\r\n                                <td>{flight.OutboundLeg.DepartureDate}</td>\r\n                                <td>{placeName(props.places, flight.OutboundLeg.OriginId)}</td>\r\n                                <td>{placeName(props.places, flight.OutboundLeg.DestinationId)}</td> \r\n                                <td>{currencyName(props.currencies)}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction currencyName(currencies){\r\n    if(currencies.length<1){\r\n        return(\"Currency not defined\")\r\n    }\r\n    return(currencies[0].Code)\r\n}\r\n\r\nfunction placeName(places, placeId){\r\n    var place;\r\n    var i;\r\n    for(i = 0; i < places.length; i++){\r\n        if(places[i].PlaceId === placeId){\r\n            return places[i].Name\r\n        }\r\n    }\r\n    return (\"city does not exist\")\r\n}\r\n\r\nexport default Flights;","import React, { useState } from 'react';\r\nimport './AirportInfo.css';\r\n// import Places from './Places';\r\nimport Flights from './Flights';\r\n\r\nfunction AirportInfo() { \r\n    const [places,setPlaces] = useState([])\r\n    const [currencies,setCurrencies] = useState([])\r\n    // const [query,setQuery] = useState(\"\")\r\n    // const [showPlaces,setShowPlaces] = useState(false)\r\n    const [flights,setFlights] = useState([])\r\n    const [query2,setQuery2] = useState(\"\")\r\n    const [curQuery,setCurQuery]= useState(\"\")\r\n    const [outQuery,setOutQuery] = useState(\"\")\r\n    const [departQuery,setDepartQuery] = useState(\"\")\r\n    const [destQuery,setDestQuery] = useState(\"\")\r\n    const [showFlights,setShowFlights] = useState(false)\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        async function getMyAPI() {\r\n                const reqFlights = {\r\n                method:'GET',\r\n                headers: {\r\n                    \"x-rapidapi-key\": '40759afcbcmsh33253c61ac2d377p14f791jsn068a8b3badfd',\r\n\t                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n\t                \"useQueryString\": true\r\n                }\r\n            }\r\n\r\n            const inboundpartialdate = {\r\n                \"inboundpartialdate\": query2\r\n            }\r\n\r\n            const currency = curQuery\r\n\r\n            const outboundpartialdate = outQuery\r\n\r\n            const originplace = departQuery + '-sky'\r\n\r\n            const destinationplace = destQuery + '-sky'\r\n\r\n            // let response2 = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/SFO-sky/JFK-sky/'+ outboundpartialdate + '?' \r\n            // + new URLSearchParams(inboundpartialdate),\r\n            // // + new URLSearchParams(outboundpartialdate),\r\n            //     reqFlights)\r\n\r\n            const link = 'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/' + currency + '/en-US/' + originplace + '/' + destinationplace + '/'+ outboundpartialdate +'?' + new URLSearchParams(inboundpartialdate)\r\n\r\n            console.log(link)\r\n\r\n            let response2 = await fetch(link \r\n            \r\n            // + new URLSearchParams(currencies)\r\n            ,\r\n                reqFlights)\r\n\r\n            // let response2 = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/' + currency + '/en-US/SFO-sky/JFK-sky/2021/03/21' \r\n            // + new URLSearchParams(inboundpartialdate),\r\n            // // + new URLSearchParams(currency),\r\n            //     reqFlights)\r\n\r\n            response2 = await response2.json()\r\n            setFlights(response2.Quotes)\r\n            setPlaces(response2.Places)\r\n            setCurrencies(response2.Currencies)\r\n            console.log(response2)\r\n        }\r\n\r\n        getMyAPI()\r\n        setOutQuery(\"\")\r\n        setQuery2(\"\")\r\n        setCurQuery(\"\")\r\n        setDepartQuery(\"\")\r\n        setDestQuery(\"\")\r\n        setShowFlights(true)\r\n    }\r\n\r\n    return <div className=\"airportinfo\">\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"inboundDate\">\r\n                Inbound Date(yyyy-mm-dd):\r\n            </label>\r\n            <input id=\"queryInput\" value={query2} onChange={(e) => setQuery2(e.target.value)} required/>\r\n            <label htmlFor=\"currency\">\r\n                Currency:\r\n            </label>\r\n            <input id=\"queryInput\" value={curQuery} onChange={(e) => setCurQuery(e.target.value)} required/>\r\n            <label htmlFor=\"outboundDate\">\r\n                Outbound Date(yyyy-mm-dd):\r\n            </label>\r\n            <input id=\"queryInput\" value={outQuery} onChange={(e) => setOutQuery(e.target.value)} required/>\r\n            <label htmlFor=\"outboundCity\">\r\n                Departure Location (Airport Code):\r\n            </label>\r\n            <input id=\"queryInput\" value={departQuery} onChange={(e) => setDepartQuery(e.target.value)} required/>\r\n            <label htmlFor=\"inboundCity\">\r\n                Destination Location (Airport Code):\r\n            </label>\r\n            <input id=\"queryInput\" value={destQuery} onChange={(e) => setDestQuery(e.target.value)} required/>\r\n            <button className=\"search\">Search</button>\r\n        </form>\r\n        {/* {showPlaces ? <Places places={places}></Places> : <></>} */}\r\n        {showFlights ? <Flights flights={flights} places={places} currencies={currencies}></Flights> : <></>}\r\n        \r\n    </div>\r\n}\r\n\r\nexport default AirportInfo;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\n//imports components\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport AirportInfo from './components/AirportInfo';\r\n\r\nfunction App() { //returns the view\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Airport Information\"></Header>\r\n      <AirportInfo></AirportInfo>\r\n      <Footer title=\"Copyright Hannah Kern\"></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}