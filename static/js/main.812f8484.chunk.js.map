{"version":3,"sources":["components/Header.js","components/Footer.js","components/Places.js","components/AirportInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","Places","places","map","place","PlaceId","PlaceName","CountryId","RegionId","CityId","CountryName","AirportInfo","useState","setPlaces","query","setQuery","showPlaces","setShowPlaces","onSubmit","e","a","reqOptions","method","headers","qString","fetch","URLSearchParams","response","json","console","log","preventDefault","getMyAPI","htmlFor","id","value","onChange","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAWeA,MARf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAME,S,MCKJC,MARf,SAAgBH,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAME,S,0CC4BJE,MA/Bf,SAAgBJ,GACZ,OACI,qBAAKC,UAAU,SAAf,SACI,kCACI,gCACI,+BACI,4CACA,8CACA,4CACA,2CACA,yCACA,mDAGR,gCACKD,EAAMK,OAAOC,KAAI,SAAAC,GACd,OAAQ,+BACJ,6BAAKA,EAAMC,UACX,6BAAKD,EAAME,YACX,6BAAKF,EAAMG,YACX,6BAAKH,EAAMI,WACX,6BAAKJ,EAAMK,SACX,6BAAKL,EAAMM,4BCuBxBC,MA5Cf,WAAwB,IAAD,EACQC,mBAAS,IADjB,mBACZV,EADY,KACLW,EADK,OAEMD,mBAAS,IAFf,mBAEZE,EAFY,KAENC,EAFM,OAGgBH,oBAAS,GAHzB,mBAGZI,EAHY,KAGDC,EAHC,KAgCnB,OAAO,sBAAKnB,UAAU,cAAf,UACH,uBAAMoB,SA5BV,SAAsBC,GAAE,4CAEpB,gCAAAC,EAAA,6DACUC,EAAa,CACfC,OAAO,MACPC,QAAS,CACL,iBAAkB,qDACrB,kBAAmB,wDACnB,gBAAkB,IAIjBC,EAAU,CACZ,MAASV,GAXjB,SAcyBW,MAAM,4GAA8G,IAAIC,gBAAgBF,GAAUH,GAd3K,cAcQM,EAdR,gBAeqBA,EAASC,OAf9B,OAeID,EAfJ,OAgBId,EAAUc,EAAS1B,QACnB4B,QAAQC,IAAIH,EAAS1B,QAjBzB,6CAFoB,sBACpBkB,EAAEY,iBADkB,mCAsBpBC,GACAjB,EAAS,IACTE,GAAc,IAId,UACI,uBAAOgB,QAAQ,aAAf,yBAGA,uBAAOC,GAAG,aAAaC,MAAOrB,EAAOsB,SAAU,SAACjB,GAAD,OAAOJ,EAASI,EAAEkB,OAAOF,QAAQG,UAAQ,IACxF,wBAAQxC,UAAU,SAAlB,uBAEHkB,EAAa,cAAC,EAAD,CAAQd,OAAQA,IAAoB,iCCzB3CqC,MAXf,WACE,OACE,sBAAKzC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAM,wBADhB,eAGE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQA,MAAM,8BCFLyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.812f8484.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { \r\n    return (\r\n        <div className=\"header\">\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) { \r\n    return (\r\n        <div className=\"footer\">\r\n            {props.title}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Places.css';\r\n\r\nfunction Places(props) { \r\n    return(\r\n        <div className=\"places\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Airport ID</th>\r\n                        <th>Airport Name</th>\r\n                        <th>Country ID</th>\r\n                        <th>Region ID</th>\r\n                        <th>City ID</th>\r\n                        <th>Country Name</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.places.map(place => {\r\n                        return (<tr>\r\n                            <th>{place.PlaceId}</th>\r\n                            <th>{place.PlaceName}</th>\r\n                            <th>{place.CountryId}</th>\r\n                            <th>{place.RegionId}</th>\r\n                            <th>{place.CityId}</th>\r\n                            <th>{place.CountryName}</th>\r\n                        </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Places;","import React, { useState } from 'react';\r\nimport './AirportInfo.css';\r\nimport Places from './Places';\r\n\r\nfunction AirportInfo() { \r\n    const [places,setPlaces] = useState([])\r\n    const [query,setQuery] = useState(\"\")\r\n    const [showPlaces,setShowPlaces] = useState(false)\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        async function getMyAPI() {\r\n            const reqOptions = {\r\n                method:'GET',\r\n                headers: {\r\n                    \"x-rapidapi-key\": '40759afcbcmsh33253c61ac2d377p14f791jsn068a8b3badfd',\r\n\t                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n\t                \"useQueryString\": true\r\n                }\r\n            }\r\n\r\n            const qString = {\r\n                \"query\": query\r\n            }\r\n            \r\n            let response = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?' + new URLSearchParams(qString), reqOptions)\r\n            response = await response.json()\r\n            setPlaces(response.Places)\r\n            console.log(response.Places)\r\n        }\r\n\r\n        getMyAPI()\r\n        setQuery(\"\")\r\n        setShowPlaces(true)\r\n    }\r\n\r\n    return <div className=\"airportinfo\">\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"queryInput\">\r\n                Place Name:\r\n            </label>\r\n            <input id=\"queryInput\" value={query} onChange={(e) => setQuery(e.target.value)} required/>\r\n            <button className=\"search\">Search</button>\r\n        </form>\r\n        {showPlaces ? <Places places={places}></Places> : <></>}\r\n    </div>\r\n}\r\n\r\nexport default AirportInfo;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\n//imports components\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport AirportInfo from './components/AirportInfo';\r\n\r\nfunction App() { //returns the view\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Airport Information\"></Header>\r\n      Starter Code\r\n      <AirportInfo></AirportInfo>\r\n      <Footer title=\"Copyright Hannah Kern\"></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}